name: ci

on: [push, pull_request]

jobs:
  fmt_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm i
      - run: npm run format:check
      - run: npm run lint
  postgres:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - run: npm i
      - run: npm test -t pg-adapter
  mysql_and_mysql2:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: bitnami/mysql
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: casbin
          MYSQL_ROOT_PASSWORD: password
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - run: npm i
      - run: |
          npm test -t mysql-adapter
          npm test -t mysql2-adapter

  sqlite3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm i
      - run: npm test -t sqlite3-adapter

  mssql:
    runs-on: ubuntu-latest
    steps:
      - name: run sqlserver
        env:
          SA_PASSWORD: Passw0rd
        run: |
          docker run --name sqlserver -it -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD='$SA_PASSWORD'' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest
          echo 'awaiting sqlserver bootup' && sleep 15
          sqlcmd -S 127.0.0.1 -U sa -P $SA_PASSWORD -Q 'CREATE DATABASE casbin'
      - uses: actions/checkout@v2
      - run: npm i
      - run: npm test -t mssql-adapter

  oracledb:
    runs-on: ubuntu-latest
    steps:
      - name: run oracle
        run: |
          docker run --name oracle -it -d -p 1521:1521 -p 8080:8080 orangehrm/oracle-xe-11g
          echo 'awaiting oracle bootup' && sleep 15 && echo 'lets try to logon'
          docker run --interactive --link oracle:oracle guywithnose/sqlplus sqlplus system/oracle@oracle:1521/xe
      - name: install oracle client
        run: |
          mkdir -p /opt/oracle
          cd /opt/oracle
          wget -O /opt/oracle/instantclient_19_8.zip https://download.oracle.com/otn_software/linux/instantclient/19800/instantclient-basic-linux.x64-19.8.0.0.0dbru.zip
          unzip instantclient_19_8.zip
          sudo apt-get install libaio1
          sudo sh -c "echo /opt/oracle/instantclient_19_8 > /etc/ld.so.conf.d/oracle-instantclient.conf"
          sudo cat /etc/ld.so.conf.d/oracle-instantclient.conf
          sudo ldconfig
          export LD_LIBRARY_PATH=/opt/oracle/instantclient_19_8:$LD_LIBRARY_PATH
      - uses: actions/checkout@v2
      - run: npm i
      - run: |
          npm test -t oracledb-adapter

  finish:
    needs: [fmt_lint, postgres, mysql_and_mysql2, sqlite3, mssql, oracledb]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm i
      - run: npm run build
      - name: Release
        if: github.event_name == 'push' && github.repository == 'node-casbin/basic-adapter'
        run: npx semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}